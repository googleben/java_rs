/// struct representing JVM opcodes
/// for more information refer to the [JVM specification](https://docs.oracle.com/javase/specs/jvms/se8/html/index.html)
#[allow(non_camel_case_types)]
#[derive(Debug, Clone)]
pub enum Opcode {
    aaload,
    aastore,
    aconst_null,
    aload { index: u8 },
    aload_0,
    aload_1,
    aload_2,
    aload_3,
    anewarray { index: u16 },
    areturn,
    arraylength,
    astore { index: u8 },
    astore_0,
    astore_1,
    astore_2,
    astore_3,
    athrow,
    baload,
    bastore,
    bipush { val: u8 },
    breakpoint,
    caload,
    castore,
    checkcast { index: u16 },
    d2f,
    d2i,
    d2l,
    dadd,
    daload,
    dastore,
    dcmpg,
    dcmpl,
    dconst_0,
    dconst_1,
    ddiv,
    dload { index: u8 },
    dload_0,
    dload_1,
    dload_2,
    dload_3,
    dmul,
    dneg,
    drem,
    dreturn,
    dstore { index: u8 },
    dstore_0,
    dstore_1,
    dstore_2,
    dstore_3,
    dsub,
    dup,
    dup_x1,
    dup_x2,
    dup2,
    dup2_x1,
    dup2_x2,
    f2d,
    f2i,
    f2l,
    fadd,
    faload,
    fastore,
    fcmpg,
    fcmpl,
    fconst_0,
    fconst_1,
    fconst_2,
    fdiv,
    fload { index: u8 },
    fload_0,
    fload_1,
    fload_2,
    fload_3,
    fmul,
    fneg,
    frem,
    freturn,
    fstore { index: u8 },
    fstore_0,
    fstore_1,
    fstore_2,
    fstore_3,
    fsub,
    getfield { index: u16 },
    getstatic { index: u16 },
    goto { branch: i16 },
    goto_w { branch: i32 },
    i2b,
    i2c,
    i2d,
    i2f,
    i2l,
    i2s,
    iadd,
    iaload,
    iand,
    iastore,
    iconst_m1,
    iconst_0,
    iconst_1,
    iconst_2,
    iconst_3,
    iconst_4,
    iconst_5,
    idiv,
    if_acmpeq { branch: i16 },
    if_acmpne { branch: i16 },
    if_icmpeq { branch: i16 },
    if_icmpge { branch: i16 },
    if_icmpgt { branch: i16 },
    if_icmple { branch: i16 },
    if_icmplt { branch: i16 },
    if_icmpne { branch: i16 },
    ifeq { branch: i16 },
    ifge { branch: i16 },
    ifgt { branch: i16 },
    ifle { branch: i16 },
    iflt { branch: i16 },
    ifne { branch: i16 },
    ifnonnull { branch: i16 },
    ifnull { branch: i16 },
    iinc { index: u8, const_: i8 },
    iload { index: u8 },
    iload_0,
    iload_1,
    iload_2,
    iload_3,
    imul,
    ineg,
    instanceof { index: u16 },
    invokedynamic { index: u16 },
    invokeinterface { index: u16, count: u8 },
    invokespecial { index: u16 },
    invokestatic { index: u16 },
    invokevirtual { index: u16 },
    ior,
    irem,
    ireturn,
    ishl,
    ishr,
    istore { index: u8 },
    istore_0,
    istore_1,
    istore_2,
    istore_3,
    isub,
    iushr,
    ixor,
    jsr { branch: i16 },
    jsr_w { branch: i32 },
    l2d,
    l2f,
    l2i,
    ladd,
    laload,
    land,
    lastore,
    lcmp,
    lconst_0,
    lconst_1,
    ldc { index: u8 },
    ldc_w { index: u16 },
    ldc2_w { index: u16 },
    ldiv,
    lload_0,
    lload_1,
    lload_2,
    lload_3,
    lload { index: u8 },
    lmul,
    lneg,
    lookupswitch { default: i32, match_offset_pairs: Vec<(i32, i32)> },
    lor,
    lrem,
    lreturn,
    lshl,
    lshr,
    lstore { index: u8 },
    lstore_0,
    lstore_1,
    lstore_2,
    lstore_3,
    lsub,
    lushr,
    lxor,
    monitorenter,
    monitorexit,
    multianewarray { index: u16, dimensions: u8 },
    new { index: u16 },
    newarray { atype: u8 },
    nop,
    pop,
    pop2,
    putfield { index: u16 },
    putstatic { index: u16 },
    ret { index: u8 },
    return_,
    saload,
    sastore,
    sipush { val: u16 },
    swap,
    tableswitch { default: i32, low: i32, high: i32, jump_offsets: Vec<i32> },
    wide { opcode: u8, index: u16 },
    wide_iinc { index: u16, const_: i16 },

    reserved,
    impdep1,
    impdep2
}